apply plugin: "maven-publish"
apply plugin: "com.jfrog.artifactory"

apply plugin: "com.jfrog.bintray"

/*
 * Copyright (c) 2020, Salesforce.com, inc.
 *  All rights reserved.
 *  SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */

// Android projects need enhanced maven plugin
if (project.getPlugins().hasPlugin('com.android.application') ||
        project.getPlugins().hasPlugin('com.android.library')) {
    apply plugin: 'com.github.dcendents.android-maven'
} else {
    apply plugin: 'maven'
}

version = VERSION
group = GROUP

task createTag {
    doLast {
        def tagName = "v$version"
        ("git tag $tagName").execute()
        ("git push --tags").execute()
        println("Created tag $tagName")
    }
}

task tagAndRelease {
    dependsOn 'createTag'
    dependsOn 'bintrayUpload'
}

bintrayUpload.mustRunAfter createTag

//install {
//    repositories.mavenInstaller {
//        pom {
//            project {
//                name project.name
//                url POM_URL
//
//                packaging POM_PACKAGING
//                version version
//
//                licenses {
//                    license {
//                        name POM_LICENSE_NAME
//                        url POM_LICENSE_URL
//                    }
//                }
//
//                developers {
//                    developer {
//                        name POM_DEVELOPER
//                    }
//                }
//
//                scm {
//                    url POM_SCM_URL
//                    connection POM_SCM_CONNECTION
//                    developerConnection POM_SCM_DEV_CONNECTION
//                }
//            }
//        }
//    }
//}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            artifact sourcesJar
            groupId group
            artifactId "k2v8"
            version version
            pom {
                name.set(project.name)
                url.set(POM_URL)

                packaging POM_PACKAGING
                version version

                licenses {
                    license {
                        name.set(POM_LICENSE_NAME)
                        url.set(POM_LICENSE_URL)
                    }
                }

                developers {
                    developer {
                        name.set(POM_DEVELOPER)
                    }
                }

                scm {
                    url.set(POM_SCM_URL)
                    connection.set(POM_SCM_CONNECTION)
                    developerConnection.set(POM_SCM_DEV_CONNECTION)
                }
            }
//            pom.withXml {
//                def root = asNode()
//                root.appendNode('description', 'An AWESOME lib. Really!')
//                root.appendNode('name', 'My Awesome Lib')
//                root.appendNode('url', 'https://github.com/thombergs/myAwesomeLib')
//                root.children().last() + pomConfig
//            }
        }
    }
}

bintray {
    user = project.findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = project.findProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    publish = true
    pkg {
        name = project.name
        repo = BINTRAY_REPO
        userOrg = BINTRAY_ORG
        licenses = [POM_LICENSE_NAME]
        vcsUrl = POM_SCM_URL
        labels = ['android', 'salesforce', 'hybrid']
        version {
            name = project.version
            released = new Date()
        }
    }
}
artifactory {
    contextUrl = 'http://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = project.findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
            password = project.findProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')
        }
        defaults {
            publications('mavenPublication')
            publishArtifacts = true
            publishPom = true
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
}